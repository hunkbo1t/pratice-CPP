Q1] Write a C++ program to implement deQueue using Link-list.
--------------------------------
#include<iostream>
#define SIZE 5
using namespace std;
class dequeue{													//deQueue
    int a[10],front,rear;
    public:
        dequeue();
        void add_at_beg(int); void add_at_end(int);
        void delete_fr_front(); void delete_fr_rear();
        void display();											//utility members
};
dequeue::dequeue(){ front=-1; rear=-1; }						//constructure
void dequeue::add_at_end(int item){								//add_at_end
    if(rear>=SIZE-1){
        cout<<"\nInsertion is not posibble,overflow!!!!";
    }else{
        if(front==-1){front++; rear++;
        }else{rear=rear+1;}
    a[rear]=item;
    cout<<"\nInserted item is "<<a[rear];
    } }
void dequeue::add_at_beg(int item){								//add_at_beg
        if(front==-1){
            front=0; a[++rear]=item;
            cout<<"\nInserted element is "<<item;
        }else if(front!=0){
            a[--front]=item;
            cout<<"\nInserted element is "<<item;
        }else{
              cout<<"\nInsertion is not posibble,overflow!!!"; } }
void dequeue::display(){										//display
    if(front==-1){
        cout<<"\nDequeue is underflow\n";
    }else{
        for(int i=front;i<=rear;i++){
            cout<<a[i]<<" "; } } }
void dequeue::delete_fr_front(){								//delete_fr_front
        if(front==-1){
            cout<<"\nDeletion is not possible::dequeue is Underflow"; return;
        }else{
            cout<<"\nThe deleted element is "<<a[front];
            if(front==rear){
                front=rear=-1; return;
			}else
                front=front+1; } }
void dequeue::delete_fr_rear(){									//delete_fr_rear
        if(front==-1){
            cout<<"\nDeletion is not possible::dequeue is Underflow\n"; return;
        }else{
            cout<<"\nThe deleted element is "<<a[rear];
            if(front==rear){
                front=rear=-1;
            }else
                rear=rear-1; } }
int main(){														//main fun
    int c,item; dequeue d1;
    cout<<"\n1]insert at Front 2]insert Rear 3]display 4]del front 5]del rear 6]exit";
    do{ cout<<"\nEnter your choice: "; cin>>c;
        switch(c){
            case 1:cout<<"\nEnter the element to be inserted:"; cin>>item;
                          d1.add_at_beg(item); break;
            case 2:cout<<"\nEnter the element to be inserted:"; cin>>item;
                        d1.add_at_end(item); break;
            case 3:d1.display(); break;
            case 4:d1.delete_fr_front(); break;
            case 5:d1.delete_fr_rear(); break;
            case 6:exit(1); break;
				default:cout<<"\nInvalid choice\n"; break;
        } }while(c!=7);}
--------------------------------
Output:
1]insert at Front 2]insert Rear 3]display 4]del front 5]del rear 6]exit
Enter your choice: 1
Enter the element to be inserted:1

Inserted element is 1
Enter your choice: 2

Enter the element to be inserted:2
Inserted item is 2
Enter your choice: 2

Enter the element to be inserted:3
Inserted item is 3
Enter your choice: 3
1 2 3
Enter your choice: 5
The deleted element is 3
Enter your choice: 3
1 2
Enter your choice: 4
The deleted element is 1
Enter your choice: 3
2
Enter your choice: 6